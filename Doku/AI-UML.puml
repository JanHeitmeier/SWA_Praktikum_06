@startuml

package "Pizza4Me" {

  package "Katalog" {

    package "boundary.rs" {
      class KatalogResource {
        +getAllePizzen(): Response
        +getPizza(id: Long): Response
        +getPizzaDetails(id: Long): Response
      }

      class PizzaDTO {
        -id: Long
        -name: String
        -beschreibung: String
        -preis: BigDecimal
      }
    }

    package "control" {
      interface KatalogService {
        +getAllePizzen(): List<Pizza>
        +getPizza(id: Long): Optional<Pizza>
        +getPizzaDetails(id: Long): PizzaDTO
      }

      class KatalogServiceImpl {
        -pizzaRepository: PizzaRepository
      }
    }

    package "entity" {
      class Pizza << Entity, AggregateRoot >> {
        -id: Long
        -name: String
        -beschreibung: String
        -preis: Geldbetrag
      }

      class Geldbetrag << ValueObject >> {
        -betrag: BigDecimal
        -waehrung: String
      }
    }

    package "gateway" {
      interface PizzaRepository {
        +findAll(): List<Pizza>
        +findById(id: Long): Optional<Pizza>
        +save(pizza: Pizza): Pizza
      }

      class JpaPizzaRepository {
        -em: EntityManager
      }
    }
  }

  package "Bestellung" {

    package "boundary.rs" {
      class WarenkorbResource {
        +getWarenkorb(warenkorbId: String): Response
        +addPizza(warenkorbId: String): Response
        +updateMenge(warenkorbId: String): Response
        +removePizza(warenkorbId: String): Response
        +bestellen(warenkorbId: String): Response
      }

      class BestellungResource {
        +getBestellung(id: Long): Response
      }
    }

    package "control" {
      interface WarenkorbService {
        +getWarenkorb(warenkorbId: String): Optional<Warenkorb>
        +warenkorbErstellen(): String
        +addPizza(warenkorbId: String, pizzaId: Long, menge: int)
        +updateMenge(warenkorbId: String, positionId: Long, menge: int)
        +removePizza(warenkorbId: String, positionId: Long)
        +bestellen(warenkorbId: String): Bestellung
      }

      class WarenkorbServiceImpl {
        -warenkorbCache: Map<String, Warenkorb>
        -bestellungRepository: BestellungRepository
        -pizzaRepository: PizzaRepository
      }

      interface BestellService {
        +getBestellung(id: Long): Optional<Bestellung>
      }
    }

    package "entity" {
      class Warenkorb << Entity >> {
        -warenkorbId: String
        -warenkorbPositionen: Map<Long, WarenkorbPosition>
        +addPosition(pizza: Pizza, menge: int)
        +updateMenge(positionId: Long, menge: int)
        +removePosition(positionId: Long)
        +getGesamtpreis(): Geldbetrag
      }

      class WarenkorbPosition {
        -id: Long
        -pizza: Pizza
        -menge: int
        -einzelpreis: Geldbetrag
        +getGesamtpreis(): Geldbetrag
      }

      class Bestellung << Entity, AggregateRoot >> {
        -id: Long
        -bestellpositionen: List<BestellPosition>
        -status: BestellStatus
        -erstelltAm: LocalDateTime
        +getGesamtpreis(): Geldbetrag
      }

      class BestellPosition << ValueObject >> {
        -pizza: Pizza
        -menge: int
        -einzelpreis: Geldbetrag
      }

      enum BestellStatus {
        NEU
        IN_BEARBEITUNG
        ABGESCHLOSSEN
      }
    }

    package "gateway" {
      interface BestellungRepository {
        +save(bestellung: Bestellung): Bestellung
        +findById(id: Long): Optional<Bestellung>
      }

      class JpaBestellungRepository {
        -em: EntityManager
      }
    }
  }

}

' Relationships
KatalogResource ..> KatalogService
KatalogService ..> PizzaRepository
KatalogServiceImpl ..|> KatalogService
JpaPizzaRepository ..|> PizzaRepository
Pizza --> "1" Geldbetrag

WarenkorbResource ..> WarenkorbService
BestellungResource ..> BestellService
WarenkorbServiceImpl ..|> WarenkorbService
JpaBestellungRepository ..|> BestellungRepository
Warenkorb *--> "*" WarenkorbPosition
WarenkorbPosition --> "1" Pizza
WarenkorbPosition --> "1" Geldbetrag
Bestellung *--> "*" BestellPosition
BestellPosition --> "1" Pizza
BestellPosition --> "1" Geldbetrag

@enduml